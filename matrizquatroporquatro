import numpy as np

def gauss(matrix, vector):
    A = np.array(matrix, float)
    b = np.array(vector, float)
    n = len(b)
    for k in range(n):
        #pivoteamento
        for i in range(k+1, n):
            factor = A[i,k] / A[k,k]
            b[i] -= factor * b[k]
            for j in range(k, n):
                A[i,j] -= factor * A[k,j]
    #substituição para trás
    x = np.zeros(n)
    for i in range(n-1, -1, -1):
        sum_ax = 0
        for j in range(i+1, n):
            sum_ax += A[i,j] * x[j]
        x[i] = (b[i] - sum_ax) / A[i,i]
    return x

#matriz 4x4
A = [[2, 1, -1, 2],
     [4, 5, -3, 6],
     [-2, 5, -2, 6],
     [4, 11, -4, 8]]

b = [5, 9, 4, 2]

x = gauss(A, b)
print("Solução:", x)
